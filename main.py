import telebot
from telebot import types

token = '1837504157:AAEbY4VlnY2fFsIk1FCiRb4O5pfYI2guYKQ' # t.me/ilyalanovbot
channelid = '-1001486961983' # –ü—Ä–æ—Å—Ç–æ –ª–µ–Ω—å —Å–æ–∑–¥–∞–≤–∞—Ç—å –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –¥–ª—è —Ç–µ—Å—Ç–∞ –∑–∞—è–≤–æ–∫ ¬Ø\_(„ÉÑ)_/¬Ø

bot = telebot.TeleBot(token) # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞

keyboard = telebot.types.ReplyKeyboardMarkup(True) # –õ–æ–≥–∏–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∏–≤–∏–∞—Ç—É—Ä—ã
keyboard.row('üî¥ –û–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç', 'üîµ –ú—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç')
keyboard.row('‚ÑπÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É')

multipage = telebot.types.InlineKeyboardMarkup(row_width=2) # –õ–æ–≥–∏–∫–∞ –º—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (‚¨ÖÔ∏è –∏ ‚û°Ô∏è)
backbtn = telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='back')
forwardbtn = telebot.types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data='forward')
multipage.add(backbtn, forwardbtn)

multipage_back = telebot.types.InlineKeyboardMarkup() # –õ–æ–≥–∏–∫–∞ –º—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (‚¨ÖÔ∏è)
multipage_back.add(telebot.types.InlineKeyboardButton(text='‚¨ÖÔ∏è', callback_data='back_one'))

multipage_forward = telebot.types.InlineKeyboardMarkup() # –õ–æ–≥–∏–∫–∞ –º—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (‚û°Ô∏è)
multipage_forward.add(telebot.types.InlineKeyboardButton(text='‚û°Ô∏è', callback_data='forward_one'))

@bot.message_handler(commands=['start']) # –ö–æ–º–∞–Ω–¥–∞ /start
def send_welcome(message):
    bot.send_message(message.chat.id, f'*–î–æ–±—Ä—ã–π –¥–µ–Ω—å.* –Ø –ø—Ä–æ—Å—Ç–æ–π –±–æ—Ç –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω–Ω—ã–π –ò–ª—å–µ–π –õ–∞–Ω–æ–≤—ã–º. ü§ö' + 
    '\n\n–£ –±–æ—Ç–∞ –≤—Å–µ–≥–æ –æ–¥–Ω–∞ –∫–æ–º–∞–Ω–¥–∞: /start _(–ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ)_' +
    '\n\n_–ê –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –≤—ã–±–µ—Ä–∏—Ç–µ –∏—Ö –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ._', reply_markup=keyboard, parse_mode='Markdown')

@bot.message_handler(content_types=['text']) # –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
def main(message):
    if message.text == 'üî¥ –û–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç': # –û–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç
        bot.send_message(message.chat.id, 
        '–ó–¥–µ—Å—å –º–æ–∂–µ—Ç –ª—é–±–æ–π –≤–∞—à —Ç–µ–∫—Å—Ç.' +
        '\n\n*–ò –∂–∏—Ä–Ω—ã–π*, _–∏ –∫—É—Ä—Å–∏–≤–Ω—ã–π_, `–∏ –¥–∞–∂–µ —Ç–∞–∫–æ–π.` üòÆ' +
        '\nüò± –ê –µ—â–µ –º–æ–≥—É—Ç –±—ã—Ç—å —ç–º–æ–¥–∑–∏. *–°–∫–æ–ª—å–∫–æ —É–≥–æ–¥–Ω–æ!* üò±', parse_mode='Markdown')
    if message.text == 'üîµ –ú—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç': # –ú—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç
        bot.send_message(message.chat.id, '–≠—Ç–æ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ç–µ–∫—Å—Ç–æ–º. üèåÔ∏è‚Äç‚ôÇÔ∏è', reply_markup=multipage_forward)
    if message.text == '‚ÑπÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É': # –ó–∞–ø—Ä–æ—Å –Ω–∞ —Ç–æ, —á—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
        request_message = bot.send_message(message.chat.id, 
        '*üî• –ó–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞–Ω—ã –≤ –Ω–∞—à–∏—Ö —É—Å–ª—É–≥–∞—Ö?*' +
        '\n\n–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É —É–∂–µ —Å–µ–π—á–∞—Å!' +
        '\n–ö—Å—Ç–∞—Ç–∏, –ø—Ä–∏–º–µ—Ä –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ @spatixtest' +
        '\n\n*–ü—Ä–∏–º–µ—Ä –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞—è–≤–∫–∏:*' +
        '\n1. –í–∞—à–µ –∏–º—è.' +
        '\n2. –í–∞—à –ø–æ–ª.' +
        '\n3. –î–∞ –∏ –≤–ø—Ä–∏–Ω—Ü–∏–ø–µ –≤—Å–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ. :)', parse_mode='Markdown')
        bot.register_next_step_handler(request_message, create_request)

@bot.callback_query_handler(func=lambda call: True) # –û—Ç–≤–µ—Ç—ã —Å –º—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
def query_handler(call):
    bot.answer_callback_query(callback_query_id=call.id)
    answer = ''
    if call.data == 'forward_one':
        answer = '–ê —Ç—É—Ç - –≤—Ç–æ—Ä–∞—è. üèÑ‚Äç‚ôÄÔ∏è'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=answer, reply_markup=multipage)
    elif call.data == 'back_one':
        answer = '–ê —Ç—É—Ç - –≤—Ç–æ—Ä–∞—è. üèÑ‚Äç‚ôÄÔ∏è'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=answer, reply_markup=multipage)   
    elif call.data == 'forward':
        answer = '–ê –∑–¥–µ—Å—å —É–∂–µ —Ç—Ä–µ—Ç—å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞. üèä‚Äç‚ôÇÔ∏è'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=answer, reply_markup=multipage_back)
    elif call.data == 'back':
        answer = '–≠—Ç–æ –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ç–µ–∫—Å—Ç–æ–º. üèåÔ∏è‚Äç‚ôÇÔ∏è'
        bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=answer, reply_markup=multipage_forward)

def create_request(message): # –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏
    if message.text == 'üî¥ –û–±—ã—á–Ω—ã–π –æ—Ç–≤–µ—Ç' or 'üîµ –ú—É–ª—å—Ç–∏—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π –æ—Ç–≤–µ—Ç' or '‚ÑπÔ∏è –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É':
        bot.send_message(message.chat.id, '‚úÖ –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –≤–∞—à—É –∑–∞—è–≤–∫—É. –°–ø–∞—Å–∏–±–æ!')
        bot.send_message(channelid, 
        '‚ùóÔ∏è *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!*\n\n*–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:* @{0}\n\n*–¢–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏:*\n{1}'
        .format(message.from_user.username, message.text), parse_mode='Markdown')   
    else:
        bot.clear_step_handler(message)
        bot.send_message(message.chat.id, '‚õîÔ∏è *–û—à–∏–±–∫–∞!* –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞—è–≤–∫–∏ –∑–∞–Ω–æ–≤–æ.', parse_mode='Markdown')

bot.polling(none_stop=True)